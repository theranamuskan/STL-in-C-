#include <bits/stdc++.h>
using namespace std;

// First

// int main()
// {
//     array<int, 10> arr;
//     for (auto i = 0; i != 10; i++)
//     {
//         arr.at(i) = i + 1;
//     }

//     for (auto i = 0; i != 10; i++)
//     {
//         cout << arr.at(i) << " ";
//     }

//     return 0;
// }

// Second  ---> at()
// It is used to point to the particular index


// int main()
// {
//     array<int, 5> arr = {5, 3, 6, 7, 8};
//     cout << arr.at(4)<<endl;
//     cout << "After changing the array at index 4" << endl;
//     arr.at(4)=4;
//     cout << arr.at(4);

//     return 0;
// }

// Third  --->begin() and end()
// Return iterator to beginning
// The value can be modified

// int main()
// {
//     array<int, 5> arr = {};
//     for (auto i = arr.begin(); i != arr.end(); i++)
//     {
//         cout << *i << " ";
//     }

//     return 0;
// }

// Fourth  ----> Returns the first element and last element

// int main()
// {
//     array<int, 4> arr;
//     cout << "Enter the element in the array. " << endl;
//     for (auto i = 0; i != 4; i++)
//     {
//         cin >> arr.at(i);
//     }

//     for (auto i = 0; i != 4; i++)
//     {
//         cout << arr.at(i) << " ";
//     }
//     cout << endl;

//     cout << "Element in the front is : " << arr.front()<<endl;
//     cout << " Element in the back is : " << arr.back();
//     return 0;
// }

// Fifth ---> Begin() and End()
// Usually, It is use to traverse the array.

// Returns an iterator pointing to the first element in the array container.

// int main()
// {
//     array<int, 4> arr;
//     for (auto i = arr.begin(); i != arr.end(); i++)
//     {
//         /* code */
//         cin >> *i;
//     }

//     cout << "Elements inside the array." << endl;
//     for (auto i = arr.begin(); i != arr.end(); i++)
//     {
//         /* code */
//         cout << *i << " ";
//     }
// }

// Sixth ---> cbegin and cend (const. begin and const. end)
// The value can't be modified

// int main()
// {
//     array<int, 5> arr = {4, 6, 3, 2, 6};
//     for (auto i = arr.cbegin(); i != arr.cend(); i++)
//     {
//         /* code */
//         cout << *i << " ";
//     }
// }

// Seventh ----> const reverse begin(crbegin() ) and const reverse end(crend())
// It will reverse the array.
// The value can't be modified

// int main()
// {
//     array<int, 5> arr = {5, 6, 7, 8, 3};
//      cout<<"The array in the revere order is : ";
//     for (auto i = arr.crbegin(); i != arr.crend(); i++)
//     {
//         /* code */
//         cout << *i << " ";
//     }
// }

// Eigth ----> empty()
// It is used to check wheather it(array) is empty or not like stuff

// int main()
// {
//     array<int, 5> arr1;
//     array<int, 0> arr2;
//     cout << "first array " << (arr1.empty() ? "is empty" : "is not empty") << '\n';
//     cout << "Second array " << (arr2.empty() ? "is empty " : "is not empty.");
//     return 0;
// }
